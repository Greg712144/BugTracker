@model BugTracker.Models.Ticket
@using Microsoft.AspNet.Identity
@using BugTracker.Helpers
@using BugTracker.Models;

@{
    ViewBag.Title = "Details";
    var db = new ApplicationDbContext();
    
}

    <div class="card-columns text-center">

        <div class="card text-center">
            <div class="card-body">

                <h2 class="card title">Ticket Info</h2><p>@Html.ActionLink("Edit", "Edit", new { id = Model.Id })</p>

                <div class="ticket-details">

                    <div class="text-left">
                        <hr />
                        <div class="row">
                            <div class="col-6">
                                <div class="post=header">
                                    <h4><b>Title:</b></h4> @Model.Title
                                </div>

                                <div class="post-body">
                                    <h4><b>Description:</b></h4> @Html.Raw(Model.Description)

                                </div>
                            </div>
                            <div class="col-6">
                                <div class="post-body">
                                    <h4><b>Ticket Type:</b></h4> @Model.TicketType.Name

                                </div>
                                <div class="post-body">
                                    <h4><b>Ticket Status:</b></h4> @Model.TicketStatus.Name

                                </div>
                                <div class="post-body">
                                    <h4><b>Ticket Priority:</b></h4> @Model.TicketPriority.Name

                                </div>
                            </div>
                        </div>      
                        <br />

                        <h4><b>Progress:</b></h4>
                        <div class="progress">
                                <div class="progress-bar @ProgressBarHelper.GetColorClass(Model.Progress) progress-bar-striped" role="progressbar" style="width: @(Model.Progress)%"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card text-center">
            <div class="card-body">
                <h2>Comments</h2>

                <hr />
                @{ 
                    var loop = 1;
                }
                @foreach (var Comment in Model.TicketComments)
                {

                    //var tickAttach = db.TicketAttachments.Find(Comment.Id);

                    <p>@Html.Raw(Comment.CommentBody)</p>
                    <p><b>Comment by @Comment.User.FirstName on @Comment.Created.ToString("MM/dd/yy") </b></p>
                    <button class="btn btn-primary btn-block" id = "btnEdit" data-toggle="modal" data-target="#ComEdit@(loop)" >Edit</button>
                    <hr />


                    

                        <div id="ComEdit@(loop)" class="modal fade" role="dialog">
                            <div class="modal-dialog modal-lg">

                                <!-- Modal content-->
                                <div class="modal-content ">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                                        <h4 class="modal-title">Modal Header</h4>
                                    </div>
                                    <div class="modal-body">
                                        <p>@Html.Partial("_ComEdit", Comment)</p>
                                        @*<p id="comId">@Html.Action("Edit", "TicketComments",new { id = Comment.Id})</p>*@
                                        <span class="comEditting"></span>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                    </div>
                                </div>

                            </div>
                        </div>
                    loop++;
                }
                @using (Html.BeginForm("Create", "TicketComments", FormMethod.Post, new { enctype = "Multipart/Form-Data", @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken();
                    @Html.Hidden("TicketId", Model.Id);



                    <div class="add-comment">
                        <header>
                            <h3 class="h6">Any comments?</h3>
                        </header>

                        <div class="row">

                            <div class="form-group col-md-12">
                                @Html.Editor("CommentBody")
                            </div>
                            <input name="filePath" type="file" class="form-control" id="fileUpload" />

                            <div class="form-group col-md-12">
                                <button type="submit" class="btn btn-rounded btn-primary">Submit Comment</button>
                            </div>
                        </div>

                    </div>
                }

            </div>
        </div>
        <br />



        <div class="card text-center">
            <div class="card-body">
                <h2>Ticket History</h2>

                <hr />

                @foreach (var History in Model.TicketHistories.OrderByDescending(c => c.Changed))
                {
                    <p>The @History.PropertyName has been changed from "@LookupHelper.GetNameFromId(History.PropertyName, History.OldValue)" to "@LookupHelper.GetNameFromId(History.PropertyName, History.NewValue)"  </p>
                    <p><b>Changed by @History.User.FirstName on @History.Changed.ToString("MM/dd/yy") </b></p>


                    <hr />
                }
            </div>
        </div>

        <div class="card text-center">
            <div class="card-body">
                <h2>Attachments</h2>
                @using (Html.BeginForm("Create", "TicketAttachments", FormMethod.Post, new { enctype = "Multipart/Form-Data", @class = "form-control" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("TicketId", Model.Id)

                        <div class="input-group">
                            <input name="filePath" type="file" class="form-control" id="fileUpload" />
                            <span class="input-group-append">
                                <button class="file-upload-browse btn btn-primary" type="submit">Upload</button>
                            </span>
                        </div>

                        <br />
                
                        foreach (var attach in Model.TicketAttachments)
                        {



                            <div class="text-left">

                                <a href=@Url.Content(attach.FilePath) target="_blank"><i class="@iconHelper.GetAssociatedIcon(attach.FilePath) "></i>@attach.FilePath.Split('/')[2]</a> <br />
                            </div>


                            <br />

                        }

                        <br />
                        <br />
                        <br />
                        <div class="form-group">
                            <div class="col-md-offset-1 col-md-11">

                            </div>
                        </div>

                }


            </div>
        </div>


    </div>

@section Scripts{

    <script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>
    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script type="text/javascript">
        $(function () {
            tinymce.init({
                selector: '#CommentBody'
            });
        });
    </script>

     @Scripts.Render("~/bundles/jqueryval")

}
@model BugTracker.Models.Ticket

@{
                /**/

                ViewBag.Title = "Edit";

}

<div class="row">
    <div class="col-md-7">
        <div class="card">
            <div class="card-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>Ticket</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Updated)
                        @Html.HiddenFor(model => model.OwnerUserId)
                        @Html.HiddenFor(model => model.ProjectId)
                        @Html.HiddenFor(model => model.Id)


                        <div class="form-group">
                            @Html.LabelFor(model => model.TicketTypeId, "Ticket Type", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TicketStatusId, "Ticket Status", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TicketPriorityId, "Ticket Priority", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))
                        {

                            <div class="form-group">
                                @Html.LabelFor(model => model.AssignedToUserId, "Assign Developer", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("AssignedToUserId", null, "--Select A Developer--", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }

                        <div class="form-group">
                            @Html.LabelForModel("Progress", new { @class = "control-label col-md-2" })
                            <div class="slidecontainer col-md-10">
                                <input type="range" min="1" max="100" value="@Model.Progress" name="progress" class="slider" id="myRange">
                                <p><span id="demo"></span> of 100%</p>
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                @if (User.Identity.Name == "DemoAdmin@mailinator.com")
                                {
                                    <button type="button" class="btn btn-primary" disabled>Save</button>

                                }
                                else if (User.Identity.Name == "DemoPM@mailinator.com")
                                {
                                    <button type="button" class="btn btn-primary" disabled>Save</button>

                                }
                                else if (User.Identity.Name == "DemoDev@mailinator.com")
                                {
                                    <button type="button" class="btn btn-primary" disabled>Save</button>

                                }
                                else if (User.Identity.Name == "DemoSub@mailinator.com")
                                {
                                    <button type="button" class="btn btn-primary" disabled>Save</button>
                
                                }
                                else
                                {
                                    <input type="submit" value="Save" class="btn btn-primary" />
                                }

                            </div>
                        </div>
                    </div>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        </div>
    </div>
</div>

                @section Scripts {

                    <script>
                        var slider = document.getElementById("myRange");
                        var output = document.getElementById("demo");
                        output.innerHTML = slider.value;

                        slider.oninput = function () {
                            output.innerHTML = this.value;
                        }
                    </script>





                    @Scripts.Render("~/bundles/jqueryval")

                }
